plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'com.krimson701'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-devtools'
    // spring-data-redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    compile group: 'redis.clients', name: 'jedis', version: '2.9.0'
    compile "org.springframework.boot:spring-boot-configuration-processor"
    compile group: 'org.springframework.data', name: 'spring-data-mongodb', version: '2.2.6.RELEASE'

    // http client
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'

    implementation 'org.webjars:sockjs-client:1.1.2'
    implementation 'org.webjars:stomp-websocket:2.3.3-1'

    compile group: 'org.modelmapper', name: 'modelmapper', version: '2.3.7'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'

    //lombok
    annotationProcessor 'org.projectlombok:lombok'

    //swagger
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.8.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.8.0'

    //log4jdbc
    compile ('org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16')

    



    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

}

test {
    useJUnitPlatform()
}
